apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: 'config/jacoco.gradle'
apply from: 'config/sonarqube.gradle'
apply plugin: 'io.fabric'

kotlin {
    experimental {
        coroutines 'enable'
    }
}
android {
    signingConfigs {
        umbrella_beta {
            keyAlias 'umbrella'
            keyPassword 'android'
            storeFile file("$project.projectDir/config/beta_keystore.jks")
            storePassword 'android'
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    configurations {
        all {
            exclude module: 'httpclient'
        }
    }

    androidExtensions {
        experimental = true
    }
    defaultConfig {
        applicationId "org.secfirst.umbrella.whitelabel"
        minSdkVersion 16
        compileSdkVersion 28
        targetSdkVersion 28
        versionCode 1
        versionName "1.0.4"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        ndk {
            abiFilters "armeabi-v7a", "x86", "armeabi", "mips"
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            testCoverageEnabled true
            ext.enableCrashlytics = false
            buildConfigField("String", "BASE_URL", "\"http://www.mocky.io/v2\"")
            buildConfigField("String", "API_KEY", "\"ABCXYZ123TEST\"")
        }
        beta {
            minifyEnabled false
            ext.enableCrashlytics = true
            signingConfig signingConfigs.umbrella_beta
        }
        release {
            minifyEnabled true
            ext.enableCrashlytics = false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {

    implementation "com.einmalfel:earl:$rss_library"
    implementation "com.squareup.picasso:picasso:$picasso_version"
    implementation "com.thoughtbot:expandablerecyclerview:$expandable_recyclerview"
    implementation "com.romandanylyk:pageindicatorview:$pageindicatorview"
    implementation "org.jsoup:jsoup:$jsoup"
    implementation "com.github.tbouron.shakedetector:library:$shakedetector"
    implementation "com.github.tiagohm.MarkdownView:library:$markdown_view_version"
    implementation "com.github.codekidX:storage-chooser:$codekidX_storage_chooser"
    implementation "com.jakewharton:process-phoenix:$process_phoenix"
    implementation 'com.commonsware.cwac:anddown:0.4.0'
    implementation "android.arch.work:work-runtime:$work_manager"
    implementation "android.arch.work:work-rxjava2:$work_manager"

    //Sectioned recyclerview
    implementation "io.github.luizgrp.sectionedrecyclerviewadapter:sectionedrecyclerviewadapter:$sectionedrecyclerviewadapter"
    // Stepper Viewer
    implementation "com.stepstone.stepper:material-stepper:$stepper_version"
    //enable multi-dex
    implementation "com.android.support:multidex:$multidex_version"
    //Font lib
    implementation "io.github.inflationx:calligraphy3:$calligraphy3"

    implementation "io.github.inflationx:viewpump:$viewpump"
    //Deploy beta version
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.4@aar') {
        transitive = true
    }

    //Framework for replacing fragments
    implementation "com.bluelinelabs:conductor:$conductor_version"
    implementation "com.bluelinelabs:conductor-support:$conductor_version"

    //OkHttp
    implementation "com.squareup.okhttp3:okhttp:$okhttp3"
    implementation "com.squareup.okhttp3:logging-interceptor:$logging_interceptor"
    implementation 'net.zetetic:android-database-sqlcipher:3.5.9@aar'

    //JGit
    implementation "commons-io:commons-io:$commonsIo_version"
    implementation "org.eclipse.jgit:org.eclipse.jgit:$jgit_version"

    //Parse lib
    implementation "com.fasterxml.jackson.core:jackson-databind:$jackson_databind_version"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$jackson_yaml_version"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:$jackson_module_version"
    implementation "com.google.code.gson:gson:$gson_version"

    //Google libs
    implementation "com.android.support:appcompat-v7:$support_library_version"
    implementation "com.android.support.constraint:constraint-layout:$support_constraint_version"
    implementation "com.android.support:design:$support_library_version"
    implementation "com.android.support:support-vector-drawable:$support_library_version"
    implementation "com.android.support:cardview-v7:$support_library_version"

    //Dependencies for local unit tests
    testImplementation "junit:junit:$junit_version"
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "org.hamcrest:hamcrest-core:$hamcrest_core_version"
    testImplementation "org.hamcrest:hamcrest-library:$hamcrest_version"

    // Android Testing Support Library's runner and rules
    androidTestImplementation "com.android.support.test:runner:$runner_version"
    androidTestImplementation "com.android.support.test:rules:$runner_version"
    testImplementation 'com.android.support.test:testing-support-lib:0.1'

    // Espresso UI Testing
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:$espresso_version"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$espresso_version"
    implementation "com.android.support.test.espresso:espresso-idling-resource:$espresso_version"
    androidTestImplementation('com.forkingcode.espresso.contrib:espresso-descendant-actions:1.2.0') {
        exclude module: 'support-annotations'
    }

    // network
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-experimental-adapter:1.0.0'

    // dependency injection
    implementation "com.google.dagger:dagger:$dagger2_version"
    implementation "com.google.dagger:dagger-android-support:$dagger2_version"
    kapt "com.google.dagger:dagger-compiler:$dagger2_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger2_version"

    //Kotlin API
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    //Dynamic layout lib
    implementation "org.jetbrains.anko:anko-commons:$anko_version"
    implementation "org.jetbrains.anko:anko:$anko_version"
    implementation "org.jetbrains.anko:anko-sdk25:$anko_version"
    implementation "org.jetbrains.anko:anko-appcompat-v7:$anko_version"
    implementation "org.jetbrains.anko:anko-sdk25-coroutines:$anko_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"

    //Database
    kapt "com.github.Raizlabs.DBFlow:dbflow-processor:${dbflow_version}"
    implementation "com.github.Raizlabs.DBFlow:dbflow-core:${dbflow_version}"
    implementation "com.github.Raizlabs.DBFlow:dbflow:${dbflow_version}"
    implementation "com.github.Raizlabs.DBFlow:dbflow-rx2-kotlinextensions:${dbflow_version}"
    implementation "com.github.Raizlabs.DBFlow:dbflow-kotlinextensions:${dbflow_version}"
    implementation "com.github.Raizlabs.DBFlow:dbflow-sqlcipher:${dbflow_version}"
    implementation "net.zetetic:android-database-sqlcipher:${sqlcipher_version}@aar"
    implementation "info.guardianproject.iocipher:IOCipher:$io_cipher"

    //file conversion
    implementation 'com.itextpdf:itextpdf:5.5.10'
    implementation 'com.itextpdf.tool:xmlworker:5.5.10'
}
